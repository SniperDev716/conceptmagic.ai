{"version":3,"file":"static/js/668.0c4ac55b.chunk.js","mappings":"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","sources":["services/sourceAPI.js","container/pages/Home/Modals/DocumentUploadModal.jsx","container/pages/Home/SideBar/partials/PDFviewModal.jsx","container/pages/Home/SideBar/SourceList.jsx","container/pages/Home/SideBar/index.jsx","container/pages/Home/Modals/SourceUploader.jsx","container/pages/Home/Main/ToolBar.jsx","container/pages/Home/Main/PromptBox.jsx","components/LoadingMessage.jsx","container/pages/Home/Main/Message.jsx","container/pages/Home/Main/MessageList.jsx","container/pages/Home/Main/index.jsx","container/pages/Home/Home.jsx"],"sourcesContent":["import { postRequest } from \"./axiosClient\";\r\n\r\nexport const deleteFile = (data) => postRequest('sources/deleteFile', data);","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport { Form, Modal, Upload, message } from \"antd\";\r\nimport { uploadDocument } from \"../../../../redux/document/documentSlice\";\r\nimport { getStorage } from \"../../../../helpers\";\r\nimport constants from \"../../../../config/constants\";\r\nimport { deleteFile } from \"../../../../services/sourceAPI\";\r\n\r\nconst DocumentUploadModal = ({ open, onClose }) => {\r\n    const [form] = Form.useForm();\r\n    const [sources, setSources] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const uploading = useSelector((state) => state.document.loading);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const uploadingError = useSelector((state) => state.source.uploadingError);\r\n\r\n    const onRemove = ((file) => {\r\n        if (file.path) {\r\n            deleteFile({ path: file.path });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            title=\"Add a Documents\"\r\n            okText=\"Submit\"\r\n            cancelText=\"Cancel\"\r\n            onCancel={() => onClose()}\r\n            onOk={() => {\r\n                form.validateFields()\r\n                    .then(async (values) => {\r\n                        const fileList = values.dragger.fileList.filter(file => file.status == 'done').map(file => ({ path: file.path, filename: file.response.filename }));\r\n                        if (fileList.length == 0) return message.error('No files uploaded.');\r\n                        dispatch(uploadDocument({ fileList, sourceId: selectedSource }));\r\n                        form.resetFields();\r\n                        setSources([]);\r\n                        onClose();\r\n                    })\r\n                    .catch((info) => {\r\n                        console.log(\"Validate Failed:\", info);\r\n                    });\r\n            }}\r\n            okButtonProps={{ loading: !!uploading }}\r\n        >\r\n            <Form form={form} layout=\"vertical\">\r\n                <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n                    <Upload.Dragger\r\n                        name=\"file\"\r\n                        action={`${constants.HOST_URL}sources/uploadFile`}\r\n                        accept=\"application/pdf\"\r\n                        headers={{\r\n                            Authorization: getStorage('token')\r\n                        }}\r\n                        fileList={sources}\r\n                        multiple={true}\r\n                        maxCount={5}\r\n                        onChange={({ fileList, file }) => {\r\n                            if (file.status == 'done') {\r\n                                file.path = file.response?.path;\r\n                            }\r\n                            const filterdFiles = fileList.filter(\r\n                                (file) => file.type === \"application/pdf\"\r\n                            );\r\n                            setSources(filterdFiles);\r\n                        }}\r\n                        onRemove={onRemove}\r\n                    >\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">\r\n                            Click or drag file to this area to upload\r\n                        </p>\r\n                    </Upload.Dragger>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DocumentUploadModal;\r\n","import React from \"react\";\r\n\r\nimport { Modal, Tooltip } from \"antd\";\r\nimport { FullscreenOutlined } from \"@ant-design/icons\";\r\n\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\nimport { fullScreenPlugin } from \"@react-pdf-viewer/full-screen\";\r\nimport { pageNavigationPlugin } from \"@react-pdf-viewer/page-navigation\";\r\nimport { zoomPlugin } from \"@react-pdf-viewer/zoom\";\r\nimport { searchPlugin } from \"@react-pdf-viewer/search\";\r\n// Import styles\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\nimport \"@react-pdf-viewer/full-screen/lib/styles/index.css\";\r\nimport \"@react-pdf-viewer/page-navigation/lib/styles/index.css\";\r\nimport \"@react-pdf-viewer/zoom/lib/styles/index.css\";\r\nimport \"@react-pdf-viewer/search/lib/styles/index.css\";\r\n\r\nconst PDFviewModal = ({ selectedDocument, openPDFModal, setOpenPDFModal }) => {\r\n  const fullScreenPluginInstance = fullScreenPlugin();\r\n  const pageNavigationPluginInstance = pageNavigationPlugin();\r\n  const zoomPluginInstance = zoomPlugin();\r\n  const searchPluginInstance = searchPlugin({\r\n    keyword: \"\",\r\n  });\r\n  const { EnterFullScreen } = fullScreenPluginInstance;\r\n  const { CurrentPageLabel } = pageNavigationPluginInstance;\r\n  const { ZoomInButton, ZoomOutButton, ZoomPopover } = zoomPluginInstance;\r\n  const { ShowSearchPopoverButton } = searchPluginInstance;\r\n\r\n  return (\r\n    <Modal\r\n      width={650}\r\n      open={openPDFModal}\r\n      title={selectedDocument.name}\r\n      onCancel={() => setOpenPDFModal(false)}\r\n      footer={[]}\r\n    >\r\n      <div className=\"flex justify-between items-center h-[32px] mx-4\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"flex\"><ShowSearchPopoverButton/> <small className=\"mt-1\">Type Ctl+F for search</small></div>\r\n        </div>\r\n        <CurrentPageLabel>\r\n          {(props) => (\r\n            <span>{`${props.currentPage + 1} / ${props.numberOfPages}`}</span>\r\n          )}\r\n        </CurrentPageLabel>\r\n        <div className=\"flex-1 flex items-center justify-end\">\r\n          <EnterFullScreen>\r\n            {(props) => (\r\n              <Tooltip placement=\"top\" title={\"Full Screen Mode\"}>\r\n                <span className=\"cursor-pointer mr-2\" onClick={props.onClick}>\r\n                  <FullscreenOutlined />\r\n                </span>\r\n              </Tooltip>\r\n            )}\r\n          </EnterFullScreen>\r\n          <ZoomPopover />\r\n          <ZoomInButton />\r\n          <ZoomOutButton />\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          border: \"0px solid rgba(0, 0, 0, 0.3)\",\r\n          height: \"70vh\",\r\n        }}\r\n      >\r\n        {selectedDocument.path && (\r\n          <Viewer\r\n            fileUrl={selectedDocument.path.replace(\"public\", \"\")}\r\n            plugins={[\r\n              fullScreenPluginInstance,\r\n              pageNavigationPluginInstance,\r\n              zoomPluginInstance,\r\n              searchPluginInstance,\r\n            ]}\r\n          />\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PDFviewModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Menu,\r\n  Spin,\r\n  message,\r\n  Popconfirm,\r\n  Form,\r\n  Modal,\r\n  Input,\r\n  Tooltip,\r\n  Button,\r\n} from \"antd\";\r\nimport {\r\n  FilePdfOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  FullscreenOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { BsChatLeftDots } from \"react-icons/bs\";\r\n\r\nimport { getSources } from \"../../../../redux/source/sourceSlice\";\r\nimport {\r\n  deleteDocument,\r\n  getDocuments,\r\n  updateDocument,\r\n} from \"../../../../redux/document/documentSlice\";\r\nimport { getStorage, getItem } from \"../../../../helpers\";\r\nimport { setSelectedSource } from \"../../../../redux/app/appSlice\";\r\nimport DocumentUploadModal from \"../Modals/DocumentUploadModal\";\r\nimport PDFviewModal from \"./partials/PDFviewModal\";\r\n\r\nconst SourceList = () => {\r\n  // useEffect(() => { pdfjs.GlobalWorkerOptions.workerSrc = `pdf.worker.js`; });\r\n  const [selectedDocument, setSelectedDocument] = useState({});\r\n  const [openPDFModal, setOpenPDFModal] = useState(false);\r\n  const loading = useSelector((state) => state.source.loading);\r\n  const error = useSelector((state) => state.source.error);\r\n  const sources = useSelector((state) => state.source.sources);\r\n  const plan = useSelector((state) => state.auth.plan);\r\n  const documents = useSelector((state) => state.document.documents);\r\n  const uploading = useSelector((state) => state.document.loading);\r\n  const dispatch = useDispatch();\r\n  const selectedSource = useSelector((state) => state.app.selectedSource);\r\n  const [openDocumentUploadModal, setOpenDocumentUploadModal] = useState(false);\r\n  const [openDocumentUpdateModal, setOpenDocumentUpdateModal] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const { id } = useParams();\r\n\r\n  const confirm = (document) => {\r\n    if(id) {\r\n      return message.warning(\r\n        \"Can't manage this action.\"\r\n      );\r\n    }\r\n    dispatch(deleteDocument(document._id));\r\n  };\r\n  const cancel = (e) => {\r\n    console.log(e);\r\n  };\r\n\r\n  const items = sources.map(({ name, sourceId }, index) => {\r\n    const docs = documents.filter((item) => item.sourceId === sourceId);\r\n    const subMenu = docs.map((document) =>\r\n      getItem(\r\n        <div className=\"\">\r\n          <div\r\n            className=\"max-w-full text-ellipsis overflow-hidden\"\r\n            title={document.name}\r\n          >\r\n            <FilePdfOutlined className=\"mr-1\" /> {document.name}\r\n          </div>\r\n          <div className=\"flex justify-around\">\r\n            {\" \"}\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              icon={<EyeOutlined />}\r\n              onClick={() => {\r\n                // window.open(selectedDocument.path.replace(\"public/\", \"\"));\r\n                setSelectedDocument(document);\r\n                setOpenPDFModal(true);\r\n              }}\r\n            >\r\n              View\r\n            </Button>{\" \"}\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => {\r\n                if(id) {\r\n                  return message.warning(\r\n                    \"Can't manage this action.\"\r\n                  );\r\n                }\r\n                setSelectedDocument(document);\r\n                setOpenDocumentUpdateModal(true);\r\n              }}\r\n            >\r\n              Rename\r\n            </Button>{\" \"}\r\n            <Popconfirm\r\n              title=\"Delete the document!\"\r\n              description=\"Are you sure to delete this document?\"\r\n              onConfirm={() => confirm(document)}\r\n              onCancel={cancel}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button type=\"primary\" size=\"small\" icon={<DeleteOutlined />}>\r\n                Delete\r\n              </Button>\r\n            </Popconfirm>{\" \"}\r\n          </div>\r\n          {/* <Dropdown\r\n              onOpenChange={(open) => {\r\n                if (open) {\r\n                  setSelectedDocument(document);\r\n                }\r\n              }}\r\n              trigger=\"click\"\r\n              menu={{ items: actionItems }}\r\n              placement=\"bottomLeft\"\r\n              arrow={{ pointAtCenter: true }}\r\n            >\r\n              <div>\r\n                <BsThreeDotsVertical />\r\n              </div>\r\n            </Dropdown> */}\r\n          {/* <div></div> */}\r\n        </div>,\r\n        `${document._id}`,\r\n        //   <FilePdfOutlined />,\r\n        null,\r\n        null,\r\n        true\r\n      )\r\n    );\r\n    subMenu.push(\r\n      getItem(\r\n        uploading == sourceId ? \"Processing...\" : \"Add Document\",\r\n        `addDocument-${index}-${sourceId}-${docs.length}`,\r\n        uploading == sourceId ? <Spin size=\"small\" /> : <PlusOutlined />,\r\n        null\r\n      )\r\n    );\r\n    if (sourceId === \"loading\") {\r\n      return getItem(\r\n        name,\r\n        `${sourceId}`,\r\n        <Spin size=\"small\" />,\r\n        null,\r\n        null,\r\n        true\r\n      );\r\n    }\r\n\r\n    if (subMenu.length > 0) {\r\n      return getItem(name, `${sourceId}`, <BsChatLeftDots />, subMenu);\r\n    }\r\n\r\n    return getItem(name, `${sourceId}`, <BsChatLeftDots />);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getSources({ id }));\r\n    dispatch(getDocuments({ id }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let latestKey = getStorage(\"latestKey\") || sources[0]?.sourceId;\r\n    if (latestKey) {\r\n      dispatch(setSelectedSource({ sourceId: latestKey }));\r\n    }\r\n  }, [sources]);\r\n\r\n  // useEffect(() => {\r\n  //     if (selectedSource) {\r\n\r\n  //     }\r\n  // }, [selectedSource]);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-400\">Loading...</div>;\r\n\r\n  const onOpenChange = (keys) => {\r\n    if (keys.length < 2) return;\r\n    let key = keys[keys.length - 1];\r\n    dispatch(setSelectedSource({ sourceId: key }));\r\n  };\r\n\r\n  const handleClick = ({ key }) => {\r\n    if (key.startsWith(\"addDocument\")) {\r\n      if (id) {\r\n        return message.warning(\"Can't manage this action.\");\r\n      }\r\n      if (uploading) {\r\n        return message.warning(\"Server is busy now. Please wait a moment...\");\r\n      }\r\n\r\n      if (key.split(\"-\")[key.split(\"-\").length - 1] >= plan.document) {\r\n        return message.warning(\"You have reached maxiumn count of documents\");\r\n      }\r\n      setOpenDocumentUploadModal(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu\r\n        className=\"sidebar\"\r\n        openKeys={[`${selectedSource}`]}\r\n        onOpenChange={onOpenChange}\r\n        mode=\"inline\"\r\n        theme=\"dark\"\r\n        items={items}\r\n        selectable={false}\r\n        onClick={handleClick}\r\n      />\r\n      <DocumentUploadModal\r\n        open={openDocumentUploadModal}\r\n        onClose={() => setOpenDocumentUploadModal(false)}\r\n      />\r\n      <Modal\r\n        open={openDocumentUpdateModal}\r\n        title=\"Change Documents\"\r\n        okText=\"Submit\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={() => setOpenDocumentUpdateModal(false)}\r\n        onOk={() => {\r\n          form\r\n            .validateFields()\r\n            .then(async (values) => {\r\n              dispatch(updateDocument({ ...values, id: selectedDocument._id }));\r\n              form.resetFields();\r\n              setOpenDocumentUpdateModal(false);\r\n            })\r\n            .catch((info) => {\r\n              console.log(\"Validate Failed:\", info);\r\n            });\r\n        }}\r\n      >\r\n        <Form form={form} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"documentName\"\r\n            label=\"Document Name\"\r\n            initialValue={selectedDocument.name}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the name of property\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <PDFviewModal\r\n        openPDFModal={openPDFModal}\r\n        setOpenPDFModal={setOpenPDFModal}\r\n        selectedDocument={selectedDocument}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SourceList;\r\n","import React from \"react\";\r\nimport SourceList from \"./SourceList\";\r\n\r\nconst SideBar = () => {\r\n  return <SourceList />;\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InboxOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Form, Input, Modal, Progress, Spin, Upload, message } from \"antd\";\r\n\r\nimport { addSource } from \"../../../../redux/source/sourceSlice\";\r\nimport constants from \"../../../../config/constants\";\r\nimport { getStorage } from \"../../../../helpers\";\r\nimport { deleteFile } from \"../../../../services/sourceAPI\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SourceUploader = () => {\r\n  const [form] = Form.useForm();\r\n  const [sources, setSources] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const allSources = useSelector((state) => state.source.sources);\r\n  const plan = useSelector((state) => state.auth.plan);\r\n  const uploading = useSelector((state) => state.source.uploading);\r\n  const uploadingError = useSelector((state) => state.source.uploadingError);\r\n  const { id } = useParams();\r\n  const onRemove = (file) => {\r\n    if (file.path) {\r\n      deleteFile({ path: file.path });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center flex justify-center\">\r\n      <button\r\n        className=\"bg-transparent text-white border border-white border-dashed hover:border-indigo-500 font-bold uppercase text-sm rounded shadow hover:shadow-lg outline-none focus:outline-none m-2 ease-linear transition-all duration-150 px-12 py-3 cursor-pointer flex items-center\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          if(id) {\r\n            return message.warning(\r\n              \"Can't manage this action.\"\r\n            );\r\n          }\r\n          if (allSources.length >= plan.property) {\r\n            return message.warning(\r\n              \"You have reached the maximum number of Properties.\"\r\n            );\r\n          }\r\n          setShowModal(true);\r\n        }}\r\n        // disabled={allSources.length >= plan.property}\r\n      >\r\n        {uploading ? (\r\n          <>\r\n            <Spin size=\"small\" className=\"mr-1\" /> Processing...\r\n          </>\r\n        ) : (\r\n          <>\r\n            <PlusOutlined className=\"text-white mr-1\" /> Add Property\r\n          </>\r\n        )}\r\n      </button>\r\n\r\n      <Modal\r\n        open={showModal}\r\n        title=\"Add a property\"\r\n        okText=\"Submit\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={() => setShowModal(false)}\r\n        onOk={() => {\r\n          form\r\n            .validateFields()\r\n            .then(async (values) => {\r\n              const sourceName = values.propertyName;\r\n              const fileList = values.dragger.fileList\r\n                .filter((file) => file.status === \"done\")\r\n                .map((file) => ({\r\n                  path: file.path,\r\n                  filename: file.response.filename,\r\n                }));\r\n              if (fileList.length === 0)\r\n                return message.error(\"No files uploaded.\");\r\n              dispatch(addSource({ sourceName, fileList }));\r\n              form.resetFields();\r\n              setSources([]);\r\n              setShowModal(false);\r\n            })\r\n            .catch((info) => {\r\n              console.log(\"Validate Failed:\", info);\r\n            });\r\n        }}\r\n        okButtonProps={{ loading: uploading }}\r\n      >\r\n        <Form form={form} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"propertyName\"\r\n            label=\"Property Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the name of property\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"dragger\" label=\"dragger\" noStyle>\r\n            <Upload.Dragger\r\n              name=\"file\"\r\n              action={`${constants.HOST_URL}sources/uploadFile`}\r\n              accept=\"application/pdf\"\r\n              headers={{\r\n                Authorization: getStorage(\"token\"),\r\n              }}\r\n              fileList={sources}\r\n              multiple={true}\r\n              maxCount={5}\r\n              onChange={({ fileList, file }) => {\r\n                if (file.status === \"done\") {\r\n                  file.path = file.response?.path;\r\n                }\r\n                const filterdFiles = fileList.filter(\r\n                  (file) => file.type === \"application/pdf\"\r\n                );\r\n                setSources(filterdFiles);\r\n              }}\r\n              onRemove={onRemove}\r\n            >\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n              </p>\r\n              <p className=\"ant-upload-text\">\r\n                Click or drag file to this area to upload\r\n              </p>\r\n            </Upload.Dragger>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SourceUploader;\r\n","import { useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Drawer, Input, Menu, Modal, Popconfirm, message } from \"antd\";\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  ClearOutlined,\r\n  CloseOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport {\r\n  deleteSource,\r\n  renameSource,\r\n} from \"../../../../redux/source/sourceSlice\";\r\nimport UserMenu from \"../../../layouts/partials/UserMenu\";\r\nimport SideBar from \"../SideBar\";\r\nimport { deleteMessages } from \"../../../../redux/message/messageSlice\";\r\nimport SourceUploader from \"../Modals/SourceUploader\";\r\n\r\nconst ToolBar = () => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const deleting = useSelector((state) => state.source.deleting);\r\n  const renaming = useSelector((state) => state.source.renaming);\r\n  const reseting = useSelector((state) => state.source.reseting);\r\n  const selectedSource = useSelector((state) => state.app.selectedSource);\r\n  const [renameModalOpen, setRenameModalOpen] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [propertyName, setPropertyName] = useState(\"\");\r\n  const { id } = useParams();\r\n\r\n  const showDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setPropertyName(e.target.value);\r\n  };\r\n\r\n  const handleOK = () => {\r\n    dispatch(renameSource({ name: propertyName, sourceId: selectedSource }));\r\n    setPropertyName(\"\");\r\n    setRenameModalOpen(false);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    if (id) {\r\n      return message.warning(\"Can't manage this action.\");\r\n    }\r\n    dispatch(deleteSource({ sourceId: selectedSource }));\r\n  };\r\n  const handleReset = () => {\r\n    // e.preventDefault();\r\n    if (id) {\r\n      return message.warning(\"Can't manage this action.\");\r\n    }\r\n    dispatch(deleteMessages({ sourceId: selectedSource }));\r\n  };\r\n\r\n  const tools = [\r\n    {\r\n      title: \"Open Documents\",\r\n      label: (\r\n        <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n          <MenuUnfoldOutlined className=\"!text-[18px]\" />\r\n        </span>\r\n      ),\r\n      className: \"!inline sm:!hidden\",\r\n      onClick: showDrawer,\r\n    },\r\n    {\r\n      title: \"Delete Property\",\r\n      label: (\r\n        <Popconfirm\r\n          placement=\"bottomLeft\"\r\n          description={\"Are you sure you want to delete this property?\"}\r\n          onConfirm={handleDelete}\r\n          okText=\"Yes\"\r\n          okButtonProps={{\r\n            className: \"bg-red-600 hover:!bg-red-500 text-white\",\r\n          }}\r\n          cancelText=\"No\"\r\n          icon={false}\r\n        >\r\n          <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n            <DeleteOutlined className=\"!text-[18px]\" /> Delete\r\n          </span>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Rename Property\",\r\n      label: (\r\n        <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n          <EditOutlined className=\"!text-[18px]\" /> Rename\r\n        </span>\r\n      ),\r\n      onClick: () => {\r\n        if(id) {\r\n            return message.warning(\r\n              \"Can't manage this action.\"\r\n            );\r\n          }\r\n        setRenameModalOpen(true);\r\n      },\r\n    },\r\n    {\r\n      title: \"Reset chat history\",\r\n      label: (\r\n        <span className=\"cursor-pointer inline-block px-1 hover:text-[#40a9ff]\">\r\n          <ClearOutlined className=\"!text-[18px]\" /> Reset chat history\r\n        </span>\r\n      ),\r\n      onClick: handleReset,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"z-[999] w-full flex items-center justify-between flex-wrap p-1 shadow bg-white\">\r\n        <Menu\r\n          mode=\"horizontal\"\r\n          className=\"w-1/2 border-0\"\r\n          selectable={false}\r\n          items={tools}\r\n        />\r\n        <div className=\"w-1/2 flex justify-end pr-2\">\r\n          {(location.pathname === \"/home\" ||\r\n            location.pathname.includes(\"/history\")) && <UserMenu />}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        title=\"Rename Property\"\r\n        style={{\r\n          top: \"10%\",\r\n        }}\r\n        open={renameModalOpen}\r\n        onOk={handleOK}\r\n        onCancel={() => setRenameModalOpen(false)}\r\n        okButtonProps={{\r\n          className: \"bg-blue-600\",\r\n        }}\r\n      >\r\n        <Input\r\n          placeholder=\"Input property name...\"\r\n          className=\"mt-2\"\r\n          onChange={handleChange}\r\n          value={propertyName}\r\n        />\r\n      </Modal>\r\n      <Drawer\r\n        title=\"\"\r\n        width={300}\r\n        placement=\"left\"\r\n        style={{ backgroundColor: \"#001529\", color: \"#fff\" }}\r\n        bodyStyle={{ padding: 0 }}\r\n        onClose={onClose}\r\n        open={open}\r\n        closeIcon={<CloseOutlined style={{ color: \"#fff\" }} />}\r\n      >\r\n        <SourceUploader />\r\n        <SideBar />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage } from \"../../../../redux/message/messageSlice\";\r\n\r\nconst PromptBox = () => {\r\n    const dispatch = useDispatch();\r\n    const waiting = useSelector((state) => state.message.waiting);\r\n    const error = useSelector((state) => state.message.promptError);\r\n    const selectedSource = useSelector((state) => state.app.selectedSource);\r\n    const canAsk = useSelector((state) => state.source.sources.length > 0);\r\n    const [query, setQuery] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n    const { id } = useParams();\r\n\r\n    // handle form submission\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (waiting) return;\r\n        if (!query) return;\r\n        const question = query.trim();\r\n        // here dispatch action to send a question to the server\r\n        dispatch(\r\n            sendMessage({\r\n                sourceId: selectedSource,\r\n                text: question,\r\n                isChatOwner: true,\r\n            })\r\n        );\r\n        setQuery(\"\");\r\n    };\r\n\r\n    // Prevent empty submission\r\n    const handleEnter = (e) => {\r\n        if (e.key === \"Enter\" && query) {\r\n            handleClick(e);\r\n        } else if (e.key == \"Enter\") {\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (canAsk && !waiting) {\r\n            inputRef.current?.focus();\r\n        }\r\n    }, [canAsk, waiting]);\r\n\r\n    return (\r\n        <div className=\"py-3 bg-white w-full px-[8px] pr-[16px]\">\r\n            <div className=\"max-w-3xl pl-2 mx-auto\">\r\n                <Space.Compact style={{ width: \"100%\" }} size=\"large\">\r\n                    <Input\r\n                        allowClear\r\n                        placeholder={\r\n                            waiting\r\n                                ? \"Waiting for response...\"\r\n                                : \"Ask any question.\"\r\n                        }\r\n                        onKeyDown={handleEnter}\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        ref={inputRef}\r\n                        disabled={!canAsk || waiting || id}\r\n                    />\r\n                    <Button\r\n                        type='primary'\r\n                        icon={<SendOutlined />}\r\n                        onClick={handleClick}\r\n                        disabled={!canAsk || waiting}\r\n                    >\r\n                    </Button>\r\n                </Space.Compact>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PromptBox;\r\n","import { Spin } from \"antd\";\r\n\r\nconst LoadingMessage = () => {\r\n    return (\r\n        <div className=\"px-3 py-2 flex flex-row w-full justify-start\">\r\n            <div className=\"px-3 py-2 w-fit lg:max-w-lg flex flex-col  rounded-lg  shadow-slate-200 shadow-sm  text-sm\">\r\n                <Spin />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingMessage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { MailOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport { Button, message as toast } from 'antd';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport classNames from 'classnames';\r\nimport { Typewriter } from \"react-simple-typewriter\";\r\n\r\nconst Message = ({ message, isLast, onClick, onType }) => {\r\n    const { text, isChatOwner, stream } = message;\r\n    const user = useSelector(state => state.auth.user);\r\n    const streamMode = stream && isLast;\r\n    \r\n    return (\r\n        <div\r\n            className={`px-2 py-2 flex w-full ${isChatOwner ? \"justify-end flex-row\" : \"flex-col-reverse justify-start flex-wrap\"\r\n                }`}\r\n        >\r\n            <div\r\n                className={`px-3 py-2 w-fit lg:max-w-lg flex flex-col shadow-slate-200 shadow-sm whitespace-pre-wrap text-sm \r\n                ${isChatOwner\r\n                        ? \"order-1  bg-blue-500 text-white cursor-default rounded-bl-lg rounded-tr-lg rounded-tl-lg\"\r\n                        : \"order-2  bg-gray-200  text-gray-800 rounded-br-lg rounded-tr-lg rounded-tl-lg\"\r\n                    }`}\r\n            >\r\n                <div className={classNames({ 'cursor-pointer': (!isChatOwner && user.isAdmin) })} onClick={() => isChatOwner ? null : onClick()}>\r\n                    {streamMode ? <Typewriter deleteSpeed={0} onType={onType} words={[text]} typeSpeed={20} className=\"whitespace-pre-wrap\" /> : text}\r\n                </div>\r\n            </div>\r\n            {!isChatOwner && <div className='mt-2 flex'><Link\r\n                to='#'\r\n                onClick={(e) => {\r\n                    window.location.href = `mailto:${user.email}?subject=${'Landlordgenius.AI'}&body=${text}`;\r\n                    e.preventDefault();\r\n                }}\r\n            >\r\n                <Button className='mr-2' type='primary' icon={<MailOutlined />} size='small'>Email</Button>\r\n            </Link> <CopyToClipboard text={text} onCopy={() => {\r\n                toast.info('This text is copied!')\r\n            }}><Button type='primary' icon={<CopyOutlined />} size='small'>Copy</Button></CopyToClipboard></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Card, Drawer, Space, Button } from \"antd\";\r\nimport { VerticalAlignBottomOutlined } from \"@ant-design/icons\";\r\n\r\nimport LoadingMessage from \"../../../../components/LoadingMessage\";\r\nimport Message from \"./Message\";\r\n\r\nconst MessageList = ({ messages }) => {\r\n  const messageListRef = useRef(null);\r\n  const messageRef = useRef(null);\r\n  const waiting = useSelector((state) => state.message.waiting);\r\n  const selectedSource = useSelector((state) => state.app.selectedSource);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const [open, setOpen] = useState(false);\r\n  const [selMessageSource, setSelMessageSource] = useState([]);\r\n\r\n  const showDrawer = (message) => {\r\n    if (!user.isAdmin) return;\r\n    setSelMessageSource(message.sourceDocuments);\r\n    setOpen(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 👇️ scroll to bottom every time messages change\r\n    setTimeout(() => {\r\n      // messageListRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, 10);\r\n  }, [messages]);\r\n  let i = 0;\r\n  const onType = (e) => {\r\n    i++;\r\n    if (i % 25 === 0) {\r\n      messageListRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={messageRef}\r\n        className=\"w-full h-fit max-w-3xl mx-auto messageListRef pl-[8px]\"\r\n      >\r\n        {selectedSource &&\r\n          messages.map((message, index) => (\r\n            <Message\r\n              onType={onType}\r\n              key={index}\r\n              message={message}\r\n              isLast={messages.length === index + 1}\r\n              onClick={() => showDrawer(message)}\r\n            />\r\n          ))}\r\n        {waiting && <LoadingMessage />}\r\n        <div ref={messageListRef} className=\"scrollBottomRef\"></div>\r\n        <Drawer\r\n          title=\"Sources Documents\"\r\n          width={350}\r\n          placement=\"right\"\r\n          onClose={onClose}\r\n          open={open}\r\n        >\r\n          <Space direction=\"vertical\">\r\n            {selMessageSource.map((source, i) => (\r\n              <Card title={`Document ${i + 1}`} key={i}>\r\n                <p>{source.pageContent}</p>\r\n              </Card>\r\n            ))}\r\n          </Space>\r\n        </Drawer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Button, Empty, Spin, message } from \"antd\";\r\nimport $ from \"jquery\";\r\n\r\nimport { getMessages } from \"../../../../redux/message/messageSlice\";\r\n\r\n// components\r\nimport ToolBar from \"./ToolBar\";\r\nimport PromptBox from \"./PromptBox\";\r\nimport MessageList from \"./MessageList\";\r\nimport { VerticalAlignBottomOutlined } from \"@ant-design/icons\";\r\n\r\nconst Main = () => {\r\n  const messagesRef = useRef(null);\r\n  const [ShowBottomToScroll, setShowBottomToScroll] = useState(false);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.message.loading);\r\n  const error = useSelector((state) => state.message.error);\r\n  const messages = useSelector((state) => state.message.messages || []);\r\n  const selectedSource = useSelector((state) => state.app.selectedSource);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    if (selectedSource) {\r\n      dispatch(getMessages({ sourceId: selectedSource, id}));\r\n    }\r\n  }, [selectedSource]);\r\n\r\n  useEffect(() => {\r\n    $(\".messagesRef\").scrollTop($(\".messagesRef\").prop('scrollHeight'));\r\n    if ($(\".messageListRef\").height() < $(window).innerHeight()) {\r\n      setShowBottomToScroll(false);\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (e) => {\r\n      e.preventDefault();\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"instant\",\r\n      });\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: false });\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    $(\".messagesRef\").on(\"scroll\", (e) => {\r\n      if (e.target.scrollTop + e.target.clientHeight >= e.target.scrollHeight) {\r\n        setShowBottomToScroll(false);\r\n      } else {\r\n        setShowBottomToScroll(true);\r\n      }\r\n    });\r\n    $(\".messageContainer\").css(\"height\", document.documentElement.clientHeight);\r\n    $(window).on(\"resize\", () => {\r\n      $(\".messageContainer\").css(\"height\", window.innerHeight);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-full mx-auto\">\r\n      <div\r\n        className={classNames(\r\n          \"bg-white flex flex-col h-screen max-h-[-webkit-fill-available] messageContainer\"\r\n        )}\r\n      >\r\n        <ToolBar />\r\n        <div\r\n          ref={messagesRef}\r\n          className={classNames(\r\n            \"messagesRef scroll-smooth flex justify-center overflow-auto flex-1\",\r\n            {\r\n              \"items-center\": loading || !messages.length,\r\n            }\r\n          )}\r\n        >\r\n          {loading ? (\r\n            <Spin className=\"mt-4\" size=\"large\"></Spin>\r\n          ) : messages.length > 0 ? (\r\n            <MessageList messages={messages} />\r\n          ) : (\r\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n          )}\r\n        </div>\r\n        <PromptBox />\r\n        {ShowBottomToScroll && (\r\n          <div className=\"absolute right-20 bottom-20 animate-bounce\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              icon={<VerticalAlignBottomOutlined />}\r\n              onClick={() => {\r\n                messagesRef.current.scrollTop =\r\n                  messagesRef.current.scrollHeight;\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"./Main\";\r\nimport SideBar from \"./SideBar\";\r\nimport SourceUploader from \"./Modals/SourceUploader\";\r\nimport { getPlan } from \"../../../redux/auth/authSlice\";\r\nconst { Content, Sider } = Layout;\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const plan = useSelector((state) => state.auth.plan);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPlan());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(id, plan);\r\n    if(!plan && !id) {\r\n        navigate('/plans');\r\n    }\r\n  }, [plan]);\r\n\r\n  return (\r\n    <>\r\n      <Sider\r\n        theme={\"dark\"}\r\n        width={300}\r\n        className=\"hidden sm:block z-50\"\r\n        style={{\r\n          overflow: \"auto\",\r\n          height: \"100vh\",\r\n          position: \"fixed\",\r\n          left: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n        }}\r\n      >\r\n        <SourceUploader />\r\n        <SideBar />\r\n      </Sider>\r\n      <Layout className=\"sm:ml-[300px]\">\r\n        <Content>\r\n          <Main />\r\n        </Content>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["deleteFile","data","postRequest","_ref","open","onClose","_Form$useForm","Form","form","_slicedToArray","_useState","useState","_useState2","sources","setSources","dispatch","useDispatch","uploading","useSelector","state","document","loading","selectedSource","app","source","uploadingError","_jsx","Modal","title","okText","cancelText","onCancel","onOk","validateFields","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","fileList","wrap","_context","prev","next","dragger","filter","file","status","map","path","filename","response","length","abrupt","message","uploadDocument","sourceId","resetFields","stop","_x","apply","arguments","catch","info","console","log","okButtonProps","children","layout","name","label","noStyle","_jsxs","Upload","action","concat","constants","accept","headers","Authorization","getStorage","multiple","maxCount","onChange","_ref3","_file$response","filterdFiles","type","onRemove","className","InboxOutlined","selectedDocument","openPDFModal","setOpenPDFModal","fullScreenPluginInstance","fullScreenPlugin","pageNavigationPluginInstance","pageNavigationPlugin","zoomPluginInstance","zoomPlugin","searchPluginInstance","searchPlugin","keyword","EnterFullScreen","CurrentPageLabel","ZoomInButton","ZoomOutButton","ZoomPopover","ShowSearchPopoverButton","width","footer","props","currentPage","numberOfPages","Tooltip","placement","onClick","FullscreenOutlined","style","border","height","Viewer","fileUrl","replace","plugins","setSelectedDocument","_useState3","_useState4","error","plan","auth","documents","_useState5","_useState6","openDocumentUploadModal","setOpenDocumentUploadModal","_useState7","_useState8","openDocumentUpdateModal","setOpenDocumentUpdateModal","id","useParams","cancel","e","items","index","docs","item","subMenu","getItem","FilePdfOutlined","Button","size","icon","EyeOutlined","EditOutlined","Popconfirm","description","onConfirm","deleteDocument","_id","confirm","DeleteOutlined","push","Spin","PlusOutlined","BsChatLeftDots","useEffect","getSources","getDocuments","_sources$","latestKey","setSelectedSource","Menu","openKeys","onOpenChange","keys","key","mode","theme","selectable","startsWith","split","DocumentUploadModal","updateDocument","_objectSpread","initialValue","rules","required","Input","PDFviewModal","SourceList","showModal","setShowModal","allSources","property","_Fragment","sourceName","propertyName","addSource","location","useLocation","deleting","renaming","reseting","renameModalOpen","setRenameModalOpen","setOpen","setPropertyName","tools","MenuUnfoldOutlined","preventDefault","deleteSource","ClearOutlined","deleteMessages","pathname","includes","UserMenu","top","renameSource","placeholder","target","value","Drawer","backgroundColor","color","bodyStyle","padding","closeIcon","CloseOutlined","SourceUploader","SideBar","waiting","promptError","canAsk","query","setQuery","inputRef","useRef","handleClick","question","trim","sendMessage","text","isChatOwner","_inputRef$current","current","focus","Space","allowClear","onKeyDown","ref","disabled","SendOutlined","isLast","onType","stream","user","streamMode","classNames","isAdmin","Typewriter","deleteSpeed","words","typeSpeed","Link","to","window","href","email","MailOutlined","CopyToClipboard","onCopy","toast","CopyOutlined","messages","messageListRef","messageRef","selMessageSource","setSelMessageSource","setTimeout","i","_messageListRef$curre","scrollIntoView","behavior","Message","sourceDocuments","showDrawer","LoadingMessage","direction","Card","pageContent","messagesRef","ShowBottomToScroll","setShowBottomToScroll","getMessages","$","scrollTop","prop","innerHeight","handleScroll","scrollTo","left","addEventListener","passive","removeEventListener","on","clientHeight","scrollHeight","css","documentElement","ToolBar","MessageList","Empty","image","PromptBox","shape","VerticalAlignBottomOutlined","Content","Layout","Sider","navigate","useNavigate","getPlan","overflow","position","bottom","Main"],"sourceRoot":""}