{"version":3,"file":"static/js/65.c86a829a.chunk.js","mappings":"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","sources":["container/pages/Price/Lists.jsx","services/planAPI.js","../node_modules/antd/es/col/index.js","../node_modules/antd/es/divider/style/index.js","../node_modules/antd/es/divider/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { Button, Card, Col, Divider, Row, Typography } from 'antd';\r\nimport { CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { getPlans } from '../../../redux/plan/planSlice';\r\nimport { createSubscription, getUserSubscription } from '../../../services/planAPI';\r\nimport { getPlanSuccess } from '../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction Lists() {\r\n\r\n  const plans = useSelector(state => state.plan.plans ?? []);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [actSub, setActSub] = useState({});\r\n  const [selSub, setSelSub] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (plans.length === 0) {\r\n      dispatch(getPlans());\r\n    }\r\n    getUserSubscription().then(res => {\r\n      setActSub(res.data.activeSubscription ?? {});\r\n      setSelSub(res.data.selectedSubscription ?? {});\r\n    });\r\n  }, []);\r\n\r\n  const handleClick = async (id) => {\r\n    await createSubscription({\r\n      planId: id,\r\n    });\r\n    dispatch(getPlanSuccess({plan: {}}));\r\n    navigate('/home');\r\n  }\r\n\r\n  return (\r\n    <div className='container mx-auto my-4'>\r\n      <Row align='stretch' justify='center' gutter={[16, 16]}>\r\n        <Col span={24}>\r\n          <Title level={3} className='text-center mt-5 m-4'>\r\n            Find the perfect plan for your team, or try it for free!\r\n          </Title>\r\n        </Col>\r\n        {plans.map(({\r\n          _id, name, slug, description, price\r\n        }) => (\r\n          <Col span={22} md={12} lg={6}  key={_id} className='!p-2 price-card'>\r\n            <Card className='shadow-lg w-full h-full'>\r\n              <div className=\"h-full flex flex-col justify-between\">\r\n                <div>\r\n                  <Title level={4}>\r\n                    {name}\r\n                  </Title>\r\n                  <Text type='secondary' className='word-break'>{description}</Text>\r\n                </div>\r\n                <Divider />\r\n                {price > 0 && <Title level={3}>${price}<Text type='secondary'>/month</Text></Title>}\r\n                {/* {price == 0 && <Title level={3}>Free</Title>}\r\n                {services.map((service, index) => (\r\n                  <div className='my-2' key={index}>\r\n                    <CheckCircleTwoTone /> <span className='text-lg'>{service}</span>\r\n                  </div>\r\n                ))} */}\r\n                <div className=\"mt-4 text-center\">\r\n                  {actSub?.planId?._id == _id && <div>\r\n                    <span className='text-[15px] cursor-default'>Current Plan</span> <br />\r\n                    {selSub?.planId && <span className='text-blue-500 cursor-pointer' onClick={() => handleClick(_id)}>Continue this plan</span>}\r\n                    {!selSub?.planId && <span className='text-gray-500 cursor-default'>Renew at {moment(actSub?.next_payment_at).format('MM/DD/YY')}</span>}\r\n                  </div>}\r\n                  {selSub?.planId?._id == _id && <div><span className='text-[15px] cursor-default'>Selected Plan</span> <br /> \r\n                  <span className='text-gray-500 cursor-default'>Start at {moment(selSub?.next_payment_at).format('MM/DD/YY')}</span>\r\n                  </div>}\r\n                  {(actSub?.planId?._id != _id && selSub?.planId?._id != _id) && <Button size='large' type=\"primary\" block onClick={() => {\r\n                    if(price > 0) {\r\n                      navigate(`/plans/${slug}`);\r\n                    } else {\r\n                      handleClick(_id);\r\n                    }\r\n                  }}>{!actSub._id ? 'Get Started' : (actSub.planId?.price > price ? 'Downgrade' : 'Upgrade')}</Button>}\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Lists;","import { getRequest, postRequest, putRequest } from \"./axiosClient\";\r\n\r\nexport const getUserSubscription = () => getRequest('plans/getUserSubscription');\r\nexport const cancelSubscription = (data) => putRequest('plans/cancelSubscription', data);\r\nexport const createSubscription = (data) => postRequest('plans/createSubscription', data);\r\nexport const increasePlanLimit = (data) => postRequest('plans/increasePlanLimit', data);","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.dividerHorizontalGutterMargin)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction,\n    divider\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\", \"style\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, divider === null || divider === void 0 ? void 0 : divider.className, hashId, cssVarCls, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const memoizedOrientationMargin = React.useMemo(() => {\n    if (typeof orientationMargin === 'number') {\n      return orientationMargin;\n    }\n    if (/^\\d+$/.test(orientationMargin)) {\n      return Number(orientationMargin);\n    }\n    return orientationMargin;\n  }, [orientationMargin]);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: memoizedOrientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: memoizedOrientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Divider');\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'usage', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: Object.assign(Object.assign({}, divider === null || divider === void 0 ? void 0 : divider.style), style)\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && ( /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["Title","Text","Typography","plans","useSelector","state","_state$plan$plans","plan","dispatch","useDispatch","navigate","useNavigate","actSub","setActSub","useState","selSub","setSelSub","useEffect","length","getPlans","getUserSubscription","then","res","_res$data$activeSubsc","_res$data$selectedSub","data","activeSubscription","selectedSubscription","handleClick","async","createSubscription","planId","id","getPlanSuccess","_jsx","className","children","_jsxs","Row","align","justify","gutter","Col","span","level","map","_ref","_actSub$planId","_selSub$planId","_actSub$planId2","_selSub$planId2","_actSub$planId3","_id","name","slug","description","price","md","lg","Card","type","Divider","onClick","moment","next_payment_at","format","Button","size","block","concat","getRequest","postRequest","increasePlanLimit","genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","textPaddingInline","orientationMargin","verticalMarginInline","Object","assign","resetComponent","borderBlockStart","unit","position","top","display","height","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","margin","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","genStyleHooks","dividerToken","mergeToken","marginLG","marginXS","unitless","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","props","getPrefixCls","direction","divider","React","ConfigContext","prefixCls","customizePrefixCls","orientation","rootClassName","dashed","plain","style","restProps","wrapCSSVar","hashId","cssVarCls","useStyle","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","classNames","memoizedOrientationMargin","test","Number","innerStyle","marginLeft","marginRight","role"],"sourceRoot":""}