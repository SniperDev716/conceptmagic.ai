{"version":3,"file":"static/js/981.ab96815b.chunk.js","mappings":"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","sources":["container/pages/Profile/Partials/UpdateProfileForm.jsx","container/pages/Profile/Partials/UpdatePasswordForm.jsx","container/pages/Profile/Partials/DeleteAccountForm.jsx","container/pages/Profile/Edit.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Card, Typography } from 'antd';\r\nimport { updateProfile } from '../../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction UpdateProfileForm() {\r\n  const [form] = Form.useForm();\r\n  const loader = useSelector(state => state.auth.loader);\r\n  const user = useSelector(state => state.auth.user);\r\n  const errors = useSelector(state => state.auth.errors);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    // console.log('Received values of form: ', values);\r\n    dispatch(updateProfile(values));\r\n  };\r\n\r\n  return (\r\n    <Card className='max-w-xl w-full shadow-lg'>\r\n      <div className=\"my-4\">\r\n        <Title level={3}>Profile Information</Title>\r\n        <Text type='secondary'>Update your account's profile information and email address.</Text>\r\n      </div>\r\n      <Form\r\n        name=\"register\"\r\n        form={form}\r\n        initialValues={{\r\n          name: user.name,\r\n          email: user.email,\r\n        }}\r\n        className=\"form\"\r\n        scrollToFirstError\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Name!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input size=\"large\"\r\n            placeholder=\"Name\"\r\n            autoFocus\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n          validateStatus={errors.email ? 'error' : ''}\r\n          help={errors.email}\r\n        >\r\n          <Input size='large'\r\n            placeholder=\"E-mail\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button loading={loader} type=\"primary\" htmlType=\"submit\" className=\"mt-2\"\r\n            size=\"large\">\r\n              Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UpdateProfileForm;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Card, Typography } from 'antd';\r\nimport { updatePassword } from '../../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction UpdatePasswordForm() {\r\n  const [form] = Form.useForm();\r\n  const loader = useSelector(state => state.auth.loader);\r\n  const errors = useSelector(state => state.auth.errors);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    // console.log('Received values of form: ', values);\r\n    dispatch(updatePassword(values));\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Card className='max-w-xl w-full shadow-lg'>\r\n      <div className=\"my-4\">\r\n        <Title level={3}>Update Password</Title>\r\n        <Text type='secondary'>Ensure your account is using a long, random password to stay secure.</Text>\r\n      </div>\r\n      <Form\r\n        name=\"update_password\"\r\n        form={form}\r\n        className=\"form\"\r\n        scrollToFirstError\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"oldPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input current password!',\r\n            },\r\n          ]}\r\n          validateStatus={errors.oldPassword ? 'error' : ''}\r\n          help={errors.oldPassword}\r\n          hasFeedback\r\n        >\r\n          <Input.Password size=\"large\" placeholder=\"Current Password\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"newPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input new password!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password size=\"large\" placeholder=\"New Password\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          dependencies={['newPassword']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm new password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('newPassword') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password size=\"large\" placeholder=\"Confirm new Password\" />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button loading={loader} type=\"primary\" htmlType=\"submit\" className=\"mt-2\"\r\n            size=\"large\">\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UpdatePasswordForm;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Input, Button, Modal, Card, Typography } from 'antd';\r\nimport { deleteAccount } from '../../../../redux/auth/authSlice';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction DeleteAccountForm() {\r\n\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const loader = useSelector(state => state.auth.loader);\r\n  const errors = useSelector(state => state.auth.errors);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = (values) => {\r\n    // console.log('Received values of form: ', values);\r\n    dispatch(deleteAccount(values));\r\n    form.resetFields();\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <Card className='max-w-xl w-full shadow-lg'>\r\n      <div className=\"my-4\">\r\n        <Title level={3}>Delete Account</Title>\r\n        <Text type='secondary'>Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.</Text>\r\n      </div>\r\n      <div className=\"my-2\">\r\n        <Button type=\"primary\" size='large' danger onClick={showModal}>\r\n          Delete Account\r\n        </Button>\r\n        <Modal\r\n          title=\"Delete Account\"\r\n          open={isModalOpen}\r\n          onOk={form.submit}\r\n          onCancel={handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" type='primary' onClick={handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loader} danger onClick={form.submit}>\r\n              Delete Account\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <div className=\"my-4\">\r\n            <Text type='secondary'>Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.</Text>\r\n          </div>\r\n          <Form\r\n            form={form}\r\n            name=\"delete_account\"\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                },\r\n              ]}\r\n              validateStatus={errors.password ? 'error' : ''}\r\n              help={errors.password}\r\n              hasFeedback\r\n            >\r\n              <Input.Password placeholder='Password' size='large' />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DeleteAccountForm;","import React from 'react'\r\nimport { Col, Row, Typography } from 'antd';\r\nimport UpdateProfileForm from './Partials/UpdateProfileForm';\r\nimport UpdatePasswordForm from './Partials/UpdatePasswordForm';\r\nimport DeleteAccountForm from './Partials/DeleteAccountForm';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction Edit() {\r\n\r\n  return (\r\n    <div className='container mx-auto my-4'>\r\n      <Row gutter={[16, 16]}>\r\n        <Col span={24} className='flex justify-center'>\r\n          <UpdateProfileForm />\r\n        </Col>\r\n        <Col span={24} className='flex justify-center'>\r\n          <UpdatePasswordForm />\r\n        </Col>\r\n        <Col span={24} className='flex justify-center'>\r\n          <DeleteAccountForm />\r\n        </Col>\r\n      </Row>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Edit;"],"names":["Title","Typography","Text","_Form$useForm","Form","form","_slicedToArray","loader","useSelector","state","auth","user","errors","dispatch","useDispatch","_jsxs","Card","className","children","_jsx","level","type","name","initialValues","email","scrollToFirstError","onFinish","values","updateProfile","rules","required","message","Input","size","placeholder","autoFocus","validateStatus","help","Button","loading","htmlType","updatePassword","resetFields","oldPassword","hasFeedback","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","_useState","useState","_useState2","isModalOpen","setIsModalOpen","handleCancel","danger","onClick","Modal","title","open","onOk","submit","onCancel","footer","deleteAccount","password","Row","gutter","Col","span","UpdateProfileForm","UpdatePasswordForm","DeleteAccountForm"],"sourceRoot":""}