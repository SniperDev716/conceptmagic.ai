{"version":3,"file":"static/js/567.620ce57b.chunk.js","mappings":"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","sources":["container/pages/Home/Result.jsx","services/v1API.js","../node_modules/antd/es/divider/style/index.js","../node_modules/antd/es/divider/index.js"],"sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Button, Col, Divider, Image, Input, Layout, Row, Spin, Tag, Typography, Upload } from \"antd\";\r\nimport { CloseCircleTwoTone, FileImageOutlined } from \"@ant-design/icons\";\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\n\r\nimport { getPlan } from \"../../../redux/auth/authSlice\";\r\nimport constants from \"../../../config/constants\";\r\nimport { getStorage } from \"../../../helpers\";\r\nimport { generateImage, getConceptById, getImageDescription } from \"../../../services/v1API\";\r\nimport { useSocket } from \"../../../context/socket\";\r\n\r\nimport loadingGif from \"../../../assets/images/loading.gif\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Title, Text } = Typography;\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nfunction Result() {\r\n  // const dispatch = useDispatch();\r\n  // const navigate = useNavigate();\r\n  // const plan = useSelector((state) => state.auth.plan);\r\n  const socket = useSocket();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [isAdvanced, setIsAdvanced] = useState([]);\r\n  const [concept, setConcept] = useState({});\r\n  const [loading, setLoading] = useState(-1);\r\n  const [keywords, setKeywords] = useState([]);\r\n  const [prevIndex, setPrevIndex] = useState({});\r\n  const [tags, setTags] = useState([]);\r\n  const [advancedValue, setAdvancedValue] = useState([]);\r\n  const [basicValue, setBasicValue] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getImage = () => {\r\n      getConceptById(id).then(res => {\r\n        setConcept(res.data.concept);\r\n        if (res.data.concept) {\r\n          setAdvancedValue(res.data.concept.resultImages.map(data => data.prompt));\r\n          setIsAdvanced(res.data.concept.resultImages.map(() => false));\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n    getImage();\r\n\r\n    if (socket) {\r\n      socket.on('IMAGE_GENERATED', (data) => {\r\n        console.log('IMAGE_GENERATED');\r\n        getImage();\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (socket) {\r\n        // socket.off('IMAGE_GENERATED');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // console.log(advancedValue, isAdvanced);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(id, plan);\r\n  //   // if(!plan && !id) {\r\n  //   //     navigate('/plans');\r\n  //   // }\r\n  // }, [plan]);\r\n\r\n  // const handleChange = (info) => {\r\n  //   setPercent(parseInt(info.file.percent));\r\n  //   if (info.file.status === \"done\") {\r\n  //     setPath(info.file.response?.path);\r\n  //   }\r\n  // };\r\n\r\n  const handleDelete = i => {\r\n    setTags(tags.filter((tag, index) => index !== i));\r\n  };\r\n\r\n  const handleAddition = tag => {\r\n    setTags([...tags, tag]);\r\n  };\r\n\r\n  const handleDrag = (tag, currPos, newPos) => {\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleAdd = (word, index, index1) => {\r\n    let tmp = [...keywords];\r\n\r\n    if (prevIndex.index == index) {\r\n      if ((prevIndex.index1 - index1) == 1) {\r\n        let prevWord = tmp.splice(-1, 1);\r\n        let newWord = word + ' ' + prevWord;\r\n        tmp = [...tmp, newWord];\r\n      } else if ((prevIndex.index1 - index1) == -1) {\r\n        let prevWord = tmp.splice(-1, 1);\r\n        let newWord = prevWord + ' ' + word;\r\n        tmp = [...tmp, newWord];\r\n      } else if ((prevIndex.index1 - index1) == 0) {\r\n      } else {\r\n        tmp = [...tmp, word];\r\n      }\r\n    } else {\r\n      tmp = [...tmp, word];\r\n    }\r\n    setKeywords([...tmp]);\r\n    setPrevIndex({ index, index1 });\r\n  }\r\n\r\n  const handleRemove = (index) => {\r\n    let tmp = [...keywords];\r\n    tmp.splice(index, 1);\r\n    setKeywords([...tmp]);\r\n  }\r\n\r\n  const handleGenerate = async (imageId, index) => {\r\n    setLoading(index);\r\n    try {\r\n      // let res = await getImageDescription({\r\n      //   path\r\n      // });\r\n      // console.log(res);\r\n      let res = await generateImage(id, { keywords: isAdvanced[index] ? advancedValue[index] : basicValue[index], imageId, isAdvanced: isAdvanced[index] });\r\n      // console.log(res);\r\n      setConcept(res.data.concept);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(-1);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"text-center max-w-5xl w-screen mx-auto p-4\">\r\n      <Row gutter={[32, 32]} className=\"mt-6\">\r\n        <Col span={24}>\r\n          {concept.resultImages?.filter(data => data.status == \"completed\").length > 0 ? <Title level={4} className=\"bg-purple-500 rounded-full p-3 !text-white\">These images are <span className=\"text-black font-bold\">AI Generated</span>. Use words to change them however you want.</Title> : <Title level={4}>Please wait 30 seconds while our AI Generates your starting image.</Title>}\r\n        </Col>\r\n        {/* <Col span={24}>\r\n          <div className=\"border-1 border-solid border-gray-300 bg-gray-100 py-2 px-4 text-left\">\r\n            {(keywords.length == 0) && \"no selected keywords!\"}\r\n            {keywords.map((keyword, index) => <Tag className=\"my-1 relative group/item\" key={index}>{keyword} <span className=\"absolute -top-2 -right-2 cursor-pointer group-hover/item:inline hidden\" onClick={() => { handleRemove(index) }}><CloseCircleTwoTone twoToneColor=\"#F00\" /></span></Tag>)}\r\n          </div>\r\n        </Col> */}\r\n        <div className=\"bg-white p-4 rounded shadow mb-4 w-full\">\r\n          {(!concept.resultImages?.length) && <div className=\"w-full h-44 bg-center bg-no-repeat bg-[length:400px_300px]\" style={{ backgroundImage: `url(${loadingGif})`, backgroundColor: \"#E9E9EB\" }}><br /><br /><br /><br /><br /><br /><br /><br />Loading...</div>}\r\n          {concept.resultImages?.map((data, index) => <Row gutter={[12, 12]} key={index}>\r\n            {data.urls?.length > 0 && <Image.PreviewGroup>\r\n              {data.urls?.map((url, index1) => <Col key={`${index}_${index1}`} span={6}>\r\n                <Image src={`${url}`} width={'100%'} />\r\n              </Col>)}\r\n            </Image.PreviewGroup>}\r\n            {(data.status !== 'completed' && data.status !== 'failed') && (concept.resultImages.length > 1 ? concept.resultImages[0].urls.map((url, index1) => <Col key={`${index}_${index1}`} span={6}><div className=\"relative flex justify-center items-center flex-col bg-gray-200\">\r\n              <img src={`${url}`} className=\"w-full blur-lg\" alt=\"product\" />\r\n              <div className=\"absolute top-0 left-0 w-full h-full flex items-center justify-center flex-col\">\r\n                <div className=\"loader\"></div>\r\n                <p className=\"mb-0\">Generating...</p>\r\n              </div>\r\n            </div></Col>) : new Array(4).fill(0).map((_, index1) => <Col key={`${index}_${index1}`} span={6}><div className=\"flex justify-center items-center flex-col bg-gray-200 relative\">\r\n              <img src={concept.inputImages[0].path.includes('https://') ? `${concept.inputImages[0].path}` : `${constants.SOCKET_URL}${concept.inputImages[0].path}`} className=\"w-full blur-lg\" alt=\"product\" />\r\n              <div className=\"absolute top-0 left-0 w-full h-full flex items-center justify-center flex-col\">\r\n                <div className=\"loader\"></div>\r\n                <p className=\"mb-0\">Generating...</p>\r\n              </div>\r\n            </div></Col>))}\r\n            {data.status == 'failed' && new Array(4).fill(0).map((_, index1) => <Col key={`${index}_${index1}`} span={6}><div className=\"flex justify-center items-center flex-col bg-gray-200  p-5\">\r\n              {/* <div className=\"loader\"></div> */}\r\n              <p className=\"mb-0\">Failed</p>\r\n            </div></Col>)}\r\n            {/* <Col span={24}>\r\n              <p className=\"break-words text-lg text-left p-2 bg-gray-50 border-l-4 border-0 border-l-gray-600 border-solid\">\r\n                {data.prompt.split(\" \").map((word, index1) => <span className=\"group/item mr-1 hover:bg-green-200 cursor-pointer relative\" key={`desc_${index}_${index1}`} onClick={() => handleAdd(word, index, index1)}>{word}\r\n                  <span className=\"absolute top-[-15px] right-[-15px] z-[-10] group-hover/item:z-auto\" onClick={() => {\r\n                    alert(\"Hello\");\r\n                  }}><CloseCircleTwoTone twoToneColor=\"red\" /></span>\r\n                </span>)}\r\n              </p>\r\n            </Col> */}\r\n            <Col span={24}>\r\n              {/* <div className=\"border-1 border-solid border-gray-200 rounded p-2\">\r\n                <ReactTags\r\n                  tags={tags}\r\n                  suggestions={data.prompt.split(\" \").filter(txt => txt.length > 5).map(txt => ({ id: txt, text: txt }))}\r\n                  delimiters={delimiters}\r\n                  handleDelete={handleDelete}\r\n                  handleAddition={handleAddition}\r\n                  handleDrag={handleDrag}\r\n                  // handleTagClick={handleTagClick}\r\n                  inputFieldPosition=\"inline\"\r\n                  autocomplete\r\n                />\r\n              </div> */}\r\n              <TextArea placeholder={isAdvanced[index] ? \"\" : \"Describe what you want to add, change, or remove from your initial renderings\"} autoSize={{ maxRows: 5 }} value={isAdvanced[index] ? advancedValue[index] : basicValue[index]} onChange={(e) => {\r\n                if (isAdvanced[index]) {\r\n                  let tmp = [...advancedValue];\r\n                  tmp[index] = e.target.value;\r\n                  setAdvancedValue(tmp);\r\n                } else {\r\n                  let tmp = [...basicValue];\r\n                  tmp[index] = e.target.value;\r\n                  setBasicValue(tmp);\r\n                }\r\n              }} />\r\n\r\n              <div className=\"mt-1 text-right\">\r\n                <Button type=\"text\" onClick={() => {\r\n\r\n                  setIsAdvanced((prev) => {\r\n                    // prev[index] = !prev[index];\r\n                    let tmp = [...prev];\r\n                    tmp[index] = !tmp[index];\r\n                    return [...tmp];\r\n                  });\r\n                }}>{isAdvanced[index] ? \"Basic Mode\" : \"Advanced\"}</Button>\r\n              </div>\r\n            </Col>\r\n            <Col span={24}>\r\n              <div className=\"text-center mb-4\">\r\n                <Button type=\"primary\" size=\"large\" onClick={() => handleGenerate(data.imageId, index)} loading={loading == index}>Generate</Button>\r\n              </div>\r\n            </Col>\r\n            <Divider />\r\n          </Row>)}\r\n        </div>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import { getRequest, postRequest } from \"./axiosClient\";\r\n\r\nexport const getImageDescription = (data) => postRequest('v1/getImageDescription', data);\r\nexport const deleteFile = (data) => postRequest('v1/deleteFile', data);\r\nexport const getConceptById = (id, data) => getRequest(`v1/getConceptById/${id}`, data);\r\nexport const generateImage = (id, data) => postRequest(`v1/generateImage/${id}`, data);\r\nexport const getProjects = (data) => getRequest(`v1/getProjects`, data);\r\nexport const getImagesfromPin = (data) => postRequest(`v1/getImagesfromPin`, data);","import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        margin: `0 ${token.dividerVerticalGutterMargin}px`,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: '5%'\n        },\n        '&::after': {\n          width: '95%'\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: '95%'\n        },\n        '&::after': {\n          width: '5%'\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        padding: '0 1em'\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerVerticalGutterMargin: token.marginXS,\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, {\n  sizePaddingEdgeHorizontal: 0\n});","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, hashId, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'Divider', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;"],"names":["TextArea","Input","Title","Typography","_concept$resultImages","_concept$resultImages2","_concept$resultImages3","socket","useSocket","id","useParams","_useState","useState","_useState2","_slicedToArray","isAdvanced","setIsAdvanced","_useState3","_useState4","concept","setConcept","_useState5","_useState6","loading","setLoading","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","advancedValue","setAdvancedValue","_useState15","_useState16","basicValue","setBasicValue","useEffect","getImage","getConceptById","then","res","data","resultImages","map","prompt","catch","err","console","log","on","handleGenerate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imageId","index","wrap","_context","prev","next","generateImage","keywords","sent","t0","stop","_x","_x2","apply","arguments","_jsx","className","children","_jsxs","Row","gutter","Col","span","filter","status","length","level","style","backgroundImage","concat","loadingGif","backgroundColor","_data$urls","_data$urls2","urls","Image","url","index1","src","width","alt","Array","fill","_","inputImages","path","includes","constants","placeholder","autoSize","maxRows","value","onChange","e","tmp","_toConsumableArray","target","Button","type","onClick","size","Divider","getImageDescription","postRequest","deleteFile","getRequest","getProjects","getImagesfromPin","genSharedDividerStyle","token","_Object$assign","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","_defineProperty","Object","assign","resetComponent","borderBlockStart","position","top","display","height","margin","dividerVerticalGutterMargin","verticalAlign","borderTop","borderInlineStart","clear","minWidth","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","padding","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","genComponentStyleHook","dividerToken","mergeToken","marginXS","marginLG","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","props","_classNames","_React$useContext","React","ConfigContext","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","orientationMargin","rootClassName","dashed","plain","restProps","_useStyle","useStyle","_useStyle2","wrapSSR","hashId","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","classNames","innerStyle","marginLeft","marginRight","role"],"sourceRoot":""}