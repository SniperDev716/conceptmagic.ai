{"version":3,"file":"static/js/128.0805ded5.chunk.js","mappings":"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","sources":["container/pages/Home/Partials/SelectedImage.js","container/pages/Home/Upload.jsx","services/v1API.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Checkmark = ({ selected }) => (\r\n  <div\r\n    style={\r\n      selected\r\n        ? { left: \"4px\", top: \"4px\", position: \"absolute\", zIndex: \"1\" }\r\n        : { display: \"none\" }\r\n    }\r\n  >\r\n    <svg\r\n      style={{ fill: \"white\", position: \"absolute\" }}\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n    >\r\n      <circle cx=\"12.5\" cy=\"12.2\" r=\"8.292\" />\r\n    </svg>\r\n    <svg\r\n      style={{ fill: \"#06befa\", position: \"absolute\" }}\r\n      width=\"24px\"\r\n      height=\"24px\"\r\n    >\r\n      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\r\n    </svg>\r\n  </div>\r\n);\r\n\r\nconst imgStyle = {\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst selectedImgStyle = {\r\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst cont = {\r\n  backgroundColor: \"#eee\",\r\n  cursor: \"pointer\",\r\n  overflow: \"hidden\",\r\n  position: \"relative\"\r\n};\r\n\r\nconst SelectedImage = ({\r\n  index,\r\n  photo,\r\n  margin,\r\n  direction,\r\n  top,\r\n  left,\r\n  selected,\r\n  onClick,\r\n}) => {\r\n  const [isSelected, setIsSelected] = useState(selected == index);\r\n  //calculate x,y scale\r\n  const sx = (100 - (30 / photo.width) * 100) / 100;\r\n  const sy = (100 - (30 / photo.height) * 100) / 100;\r\n  selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\r\n\r\n  if (direction === \"column\") {\r\n    cont.position = \"absolute\";\r\n    cont.left = left;\r\n    cont.top = top;\r\n  }\r\n\r\n  const handleOnClick = e => {\r\n    // setIsSelected();\r\n    onClick(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsSelected(selected == index);\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div\r\n      style={{ margin, height: photo.height, width: photo.width, ...cont }}\r\n      className={!isSelected ? \"not-selected\" : \"\"}\r\n    >\r\n      <Checkmark selected={isSelected ? true : false} />\r\n      <img\r\n        alt={photo.title}\r\n        style={\r\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\r\n        }\r\n        {...photo}\r\n        onClick={handleOnClick}\r\n      />\r\n      <style>{`.not-selected:hover{outline:2px solid #06befa}`}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedImage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Button, Col, Divider, Image, Input, Layout, Row, Skeleton, Spin, Typography, Upload, message } from \"antd\";\r\nimport { FileImageOutlined, SelectOutlined, UploadOutlined } from \"@ant-design/icons\";\r\nimport Gallery from \"react-photo-gallery\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport $ from \"jquery\";\r\n\r\nimport constants from \"../../../config/constants\";\r\nimport { getStorage } from \"../../../helpers\";\r\nimport { getPlan } from \"../../../redux/auth/authSlice\";\r\nimport { deleteFile, getImageDescription, getImagesfromPin } from \"../../../services/v1API\";\r\nimport SelectedImage from \"./Partials/SelectedImage\";\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { Title, Text } = Typography;\r\nconst { Dragger } = Upload;\r\n\r\nfunction UploadContainer() {\r\n  // const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // const plan = useSelector((state) => state.auth.plan);\r\n  // const { id } = useParams();\r\n\r\n  // const [percent, setPercent] = useState(0);\r\n  const [search, setSearch] = useState(getStorage(\"image_type\") || \"Product Renderings\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingMore, setLoadingMore] = useState(false);\r\n  const [pinLoading, setPinLoading] = useState(false);\r\n  const [fileLists, setFileLists] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [path, setPath] = useState(\"\");\r\n  const [pinImages, setPinImages] = useState([]);\r\n  const [setting, setSetting] = useState({});\r\n  const [selected, setSelected] = useState(-1);\r\n\r\n  const getPinImages = (flag = false) => {\r\n    let data = { query: search };\r\n    if (!flag) {\r\n      data = { ...data, ...setting };\r\n      setLoadingMore(true);\r\n    } else {\r\n      $(\"#imagelistview .infinite-scroll-component\").scrollTop(0);\r\n      setPinLoading(true);\r\n    }\r\n    getImagesfromPin(data).then(res => {\r\n      // console.log(res.data);\r\n      if (flag) {\r\n        setPinImages(res.data.images);\r\n      } else {\r\n        setPinImages([...pinImages, ...res.data.images]);\r\n      }\r\n      setSetting({\r\n        bookmarks: res.data.bookmarks,\r\n        token: res.data.token,\r\n        cookie: res.data.cookie,\r\n      });\r\n      // console.log(res.data.bookmarks);\r\n    }).catch(err => {\r\n      console.log(err);\r\n    }).finally(() => {\r\n      setPinLoading(false);\r\n      setLoadingMore(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // dispatch(getPlan());\r\n    getPinImages(true);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   // setSetting({});\r\n  // }, [search]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(id, plan);\r\n  //   // if(!plan && !id) {\r\n  //   //     navigate('/plans');\r\n  //   // }\r\n  // }, [plan]);\r\n\r\n  const handleSearch = () => {\r\n    getPinImages(true);\r\n  }\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"done\") {\r\n      setPath(info.file.response?.path);\r\n      info.file.thumbUrl = `${constants.SOCKET_URL}${info.file.response?.path}`;\r\n    }\r\n    setFileLists(info.fileList.length == 1 ? info.fileList : info.fileList.splice(1, 1));\r\n    setSelected(-1);\r\n  };\r\n\r\n  const handleDelete = (file) => {\r\n    deleteFile({\r\n      path: file.response?.path,\r\n    }).then((res) => {\r\n      console.log(res);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  const handleNext = async () => {\r\n    if (loading) return;\r\n    if (!name) return message.warning('Please input name your project!');\r\n    let data = fileLists.filter(file => file.status == 'done').map(file => file.response?.path);\r\n    if (data.length == 0 && selected == -1) return message.warning(\"Please choose your inspiration image\");\r\n    setLoading(true);\r\n    try {\r\n      let res = await getImageDescription({\r\n        fileLists: selected == -1 ? data : [pinImages[selected].src],\r\n        name\r\n      });\r\n      // console.log(res);\r\n      navigate(`/result/${res.data.id}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center max-w-5xl w-screen mx-auto p-2\">\r\n      <Row gutter={[24, 24]} className=\"mt-6\">\r\n        <Col span={24}>\r\n          <Title level={3}>Select an image that you'd like to use as a starting point.</Title>\r\n        </Col>\r\n        <Col span={24} className=\"relative\">\r\n          <div className=\"max-w-xl absolute z-50 right-10 top-5\">\r\n            <Input.Search size=\"large\" className=\"[&_input]:opacity-70 [&_input:hover]:opacity-100 [&_input:focus]:opacity-100\" onSearch={() => handleSearch()} loading={pinLoading} value={search} onChange={(e) => setSearch(e.target.value)} />\r\n          </div>\r\n          <div id=\"imagelistview\" className=\"max-h-[calc(100vh_-_425px)] overflow-y-auto overflow-x-hidden border-4 border-solid border-blue-400 rounded-lg\">\r\n            {/* <Row gutter={[32, 32]}>\r\n              {pinImages.map((image, index) => <Col span={6}>\r\n                <Image src={image} alt=\"pin\" />\r\n              </Col>)}\r\n            </Row> */}\r\n            {/* {pinImages.map((image, index) => <img key={index} src={image} alt={'pin'} className=\"w-1/4\"/>)} */}\r\n            <InfiniteScroll\r\n              dataLength={pinImages.length}\r\n              next={() => { getPinImages() }}\r\n              hasMore={true}\r\n              scrollableTarget=\"imagelistview\"\r\n              height=\"calc(100vh - 440px)\"\r\n              loader={\r\n                <div className=\"mt-2 flex\">\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-1/4 p-1\">\r\n                    <Skeleton.Image\r\n                      className=\"!w-full\"\r\n                      key={Date.now()}\r\n                      active\r\n                      loading={loadingMore}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              }\r\n              // endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\r\n              scrollThreshold={1}\r\n            // useWindow={false}\r\n            >\r\n              {pinImages.length > 0 && <Gallery photos={pinImages} direction=\"column\" columns={4} onClick={(e) => {\r\n                console.log(e.target, arguments);\r\n              }}\r\n                renderImage={({ index, left, top, key, photo }) => {\r\n                  return (\r\n                    <SelectedImage\r\n                      selected={selected}\r\n                      key={key}\r\n                      margin={\"2px\"}\r\n                      direction=\"column\"\r\n                      index={index}\r\n                      photo={photo}\r\n                      left={left}\r\n                      top={top}\r\n                      onClick={(pos) => {\r\n                        setSelected(pos);\r\n                        setFileLists([]);\r\n                      }}\r\n                    />\r\n                  )\r\n                }}\r\n              />}\r\n            </InfiniteScroll>\r\n          </div>\r\n        </Col>\r\n        <Divider className=\"!m-0\">Or</Divider>\r\n        <Col span={24}>\r\n          <Upload\r\n            name=\"file\"\r\n            multiple={false}\r\n            fileList={fileLists}\r\n            action={`${constants.HOST_URL}v1/upload`}\r\n            showUploadList={true}\r\n            listType=\"picture\"\r\n            accept=\"image/*\"\r\n            headers={{\r\n              Authorization: getStorage(\"token\"),\r\n            }}\r\n            data={{\r\n              oldFile: path,\r\n            }}\r\n            onChange={handleChange}\r\n            onRemove={handleDelete}>\r\n            <Button className=\"\" size=\"large\" icon={<UploadOutlined />}>Choose from your computer</Button>\r\n          </Upload>\r\n        </Col>\r\n        <Col span={24}>\r\n          <Input\r\n            type=\"text\"\r\n            className=\"text-center\"\r\n            size=\"large\"\r\n            placeholder=\"Name Your Project...\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Col>\r\n        {/* <Col span={24}>\r\n        </Col> */}\r\n        {/* {path && <Col span={12}>\r\n          <Image src={`${constants.SOCKET_URL}${path}`} width={'100%'} />\r\n        </Col>} */}\r\n        <Col span={24}>\r\n          <div className=\"text-center\">\r\n            <Button type=\"primary\" size=\"large\" onClick={handleNext} loading={loading}>Next step</Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadContainer;\r\n","import { getRequest, postRequest } from \"./axiosClient\";\r\n\r\nexport const getImageDescription = (data) => postRequest('v1/getImageDescription', data);\r\nexport const deleteFile = (data) => postRequest('v1/deleteFile', data);\r\nexport const getConceptById = (id, data) => getRequest(`v1/getConceptById/${id}`, data);\r\nexport const generateImage = (id, data) => postRequest(`v1/generateImage/${id}`, data);\r\nexport const getProjects = (data) => getRequest(`v1/getProjects`, data);\r\nexport const getImagesfromPin = (data) => postRequest(`v1/getImagesfromPin`, data);"],"names":["Checkmark","_ref","selected","_jsxs","style","left","top","position","zIndex","display","children","_jsx","fill","width","height","cx","cy","r","d","imgStyle","transition","selectedImgStyle","transform","cont","backgroundColor","cursor","overflow","_ref2","index","photo","margin","direction","onClick","_useState","useState","_useState2","_slicedToArray","isSelected","setIsSelected","sx","sy","concat","useEffect","_objectSpread","className","alt","title","e","Title","Layout","Typography","Upload","_arguments","arguments","navigate","useNavigate","getStorage","search","setSearch","_useState3","_useState4","loading","setLoading","_useState5","_useState6","loadingMore","setLoadingMore","_useState7","_useState8","pinLoading","setPinLoading","_useState9","_useState10","fileLists","setFileLists","_useState11","_useState12","name","setName","_useState13","_useState14","path","setPath","_useState15","_useState16","pinImages","setPinImages","_useState17","_useState18","setting","setSetting","_useState19","_useState20","setSelected","getPinImages","flag","length","undefined","data","query","$","scrollTop","getImagesfromPin","then","res","images","_toConsumableArray","bookmarks","token","cookie","catch","err","console","log","finally","handleNext","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","message","filter","file","status","map","_file$response2","response","getImageDescription","src","sent","id","t0","stop","apply","Row","gutter","Col","span","level","Input","size","onSearch","value","onChange","target","InfiniteScroll","dataLength","hasMore","scrollableTarget","loader","Skeleton","active","Date","now","scrollThreshold","Gallery","photos","columns","renderImage","key","SelectedImage","pos","Divider","multiple","fileList","action","constants","showUploadList","listType","accept","headers","Authorization","oldFile","info","_info$file$response","_info$file$response2","thumbUrl","splice","onRemove","_file$response","deleteFile","Button","icon","UploadOutlined","type","placeholder","postRequest","getConceptById","getRequest","generateImage","getProjects"],"sourceRoot":""}